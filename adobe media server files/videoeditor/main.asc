Client.prototype.getFilesSource = function() {
	var fileList = new File("/media"); 
	var temp = fileList.list();
	if(temp != null)
	{
	var returnvalue = new Array();
	for (var i=0;i<temp.length;i++) {
	returnvalue.push(temp[i].name); 
 
	} return returnvalue;
	}else {
		return new Array();
	}
}
Client.prototype.testy = function() {
		var num = 150;
		return num;
}
application.onDisconnect = function(client)
{
		

		trace("diconnected");
		
}
application.onConnect = function( client ) { 

    client.getStreamLength = function( streamName ) { 
        trace(streamName + " is " + Stream.length( streamName )); 
        return Stream.length( streamName); 
    }    
	


	client.saveEditedVideoToDisk = function(videoArray)
	{
	
		var finishedrecording = false;
		var record = false;
		var totalTime = 0;
		
			for (var t=0; t< videoArray.length;t++)
			{
				var clipDuration = videoArray[t].end - videoArray[t].start;
				totalTime += clipDuration;
			}
		
			application.savedStream = Stream.get("mp4:saved.f4v");
			var destroyStream = Stream.destroy(application.savedStream);
			trace("overwrite stream mp4:savedStream.f4v");
			application.savedStream = Stream.get("mp4:saved.f4v");
			
			if (application.savedStream)
			{
				
				recorded = application.savedStream.record();
				trace("save recording to disk");
				
					for (var i = 0; i < videoArray.length; i++)
					{

					application.savedStream.play(videoArray[i].source, videoArray[i].start, videoArray[i].end-videoArray[i].start, false);
		
					//trace("record "+videoArray[i].source, " ", videoArray[i].start, " ",videoArray[i].end);
					}
					if (application.savedStream)
					{
						var streamFound = true;
						application.savedStream.onStatus = function(info)
						{ 
				 
						trace(info.code); 
						if(info.code == "NetStream.Play.StreamNotFound")
						{
							streamFound = false;
						}
						if(info.code == "NetStream.Record.Stop")
						{
							if(streamFound)
							{
							trace("Video saved to disk");
							client.call("videoSavedToDisk");
							}
						}
						if(info.code == "NetStream.Play.Stop")
						{
							
							application.savedStream.flush(); 
							application.savedStream.record(false);
							
						}
						}
					}
			
			}
	}
	
	
	client.getVideoEidtedPreview = function(videoArray) {
	var recorded = false;
	
	var totalTime = 0;
	for (var t=0; t< videoArray.length;t++)
	{
		var clipDuration = videoArray[t].end - videoArray[t].start;
		totalTime += clipDuration;
	}
	//trace("total timeline time " + totalTime);
	
	application.myStream = Stream.get("mp4:recStream.f4v");
	
	var destroyStream = Stream.destroy(application.myStream);
		
	//trace("Stream destroyed mp4:recStream.f4v");
	
	application.myStream = Stream.get("mp4:recStream.f4v");
	if (application.myStream){
	

		
		//recorded = application.myStream.record("record", -1, -1);
		//recorded = application.myStream.record("appendWithGap", -1, -1);
		recorded = application.myStream.record();

		
		for (var i = 0; i < videoArray.length; i++) {

		application.myStream.play(videoArray[i].source, videoArray[i].start, videoArray[i].end-videoArray[i].start, false);
		
		//trace("record "+videoArray[i].source, " ", videoArray[i].start, " ",videoArray[i].end);
		}
		
		application.myStream.flush(); 
		application.myStream.record(false);
		
		}
		if(recorded)
		{
			return totalTime; 
		}else{
			return -1;
		}
	}
	
	application.acceptConnection( client ); 
}